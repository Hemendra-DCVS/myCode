public class Solution {
	public static void findLargest(int mat[][]){
        //Your code goes here
		//find the row sum
	     if(mat.length == 0){
			  int max = Integer.MIN_VALUE;
			  System.out.println("row " + "0 " + max);
			  return;
		 }
		int sum = 0;
		int max = 0;
		int maxRow = 0;
		for(int i= 0; i<mat.length; i++){
			for(int j = 0; j<mat[i].length; j++){
				sum = sum + mat[i][j];
				if(sum>max){
				max = sum;
				maxRow = i;
		    }
			
			}
			sum = 0;
		}
		int sums = 0;
		int maxs = 0;
		int maxCol = 0;
		for(int i=0; i<mat[0].length; i++){
			for(int j =0; j<mat.length; j++ ){
				sums = sums + mat[j][i];
				if(sums>maxs){
					maxs = sums;
					maxCol = i;
				}
			}
			sums =0;
		}
		if( maxs > max  ){
			System.out.println("column " + maxCol + " " + maxs);
		}else{
			System.out.println("row " + maxRow + " " + max );
		}
	}
}



import java.util.*;
public class Solution {

	public static void findLargest(int mat[][]){
		int rows = mat.length;
         if(rows<1){
            System.out.print("row" + " " + "0" + " " + Integer.MIN_VALUE);
            return;
        }
        int cols = mat[0].length;
        String largest = "max";
        int largestIndex = Integer.MIN_VALUE;
        int largestSum = Integer.MIN_VALUE;
       
        //ROW WISE LARGEST 
        String max1 = "row";
        int maxIndex1 = Integer.MIN_VALUE;
        int maxSum1 = Integer.MIN_VALUE;

        
        for(int i =0; i<rows;i++){
            int sum = 0;
            for(int j=0; j<cols; j++){
                sum += mat[i][j];
            }
            if(sum > maxSum1){
                maxSum1 = sum;
                maxIndex1 = i;
                
                          }
        }

        //COL WISE LARGEST
        String max2 = "column";
        int maxIndex2 = Integer.MIN_VALUE;
        int maxSum2 = Integer.MIN_VALUE;

        for(int j=0;j<cols;j++){
            int sum = 0;
            for(int i=0;i<rows;i++){
                sum += mat[i][j];
            }
            if(sum > maxSum2){
                maxSum2 = sum;
                maxIndex2 = j;
                
            }
        }

        if(maxSum2 > maxSum1){
            largest = max2;
            largestIndex = maxIndex2;
            largestSum = maxSum2;
        }else{
            largest = max1;
            largestIndex = maxIndex1;
            largestSum = maxSum1;
        }
        System.out.print(largest + " " + largestIndex + " " + largestSum);
        System.out.println();
	}
    
}