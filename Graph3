//graph breadthfirst tranversal
import java.util.*;
import java.util.Scanner;
public class graph3 {
    public static void BFS(int AdjMatrix[][], int CV, boolean visited[]) {
        Queue<Integer> pendingV = new LinkedList<>();
        pendingV.add(CV);
        System.out.print(CV + " ");
        visited[CV] = true;

        while (! pendingV.isEmpty()) {
            for (int i = 0; i < AdjMatrix.length; i++) {
                if (AdjMatrix[CV][i] == 1 && visited[i] == false ) {
                    pendingV.add(i);
                    CV = pendingV.poll();
                    System.out.print(i + " ");
                    visited[i] = true;
                    /*
                    5 4
                    0 2
                    0 3
                    2 1
                    3 4
                       */
                }
            }
        }
    }
    public static void BFS(int[][] AdjMatrix) {
        int CV = 0;
        boolean visited[] = new boolean[AdjMatrix.length];
        BFS(AdjMatrix, CV, visited);
    }

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int V = s.nextInt();
        int E = s.nextInt();
        int AdjMatrix[][] = new int[V][V];
        for (int i = 0; i < E; i++) {
            int e1 = s.nextInt();
            int e2 = s.nextInt();
            AdjMatrix[e1][e2] = 1;
            AdjMatrix[e2][e1] = 1;
        }
        BFS(AdjMatrix);


    }
}
