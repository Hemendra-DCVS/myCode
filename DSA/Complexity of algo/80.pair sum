public class Solution {	

	public static int pairSum(int[] arr, int num) {
		//Your code goes here
        int pair = 0;
        for(int i=0; i<arr.length;i++){
            int ele = arr[i];
            for(int j=i+1; j<arr.length;j++){
                if(ele + arr[j] == num){
                    pair++;
					// System.out.println(i + " " + "," + j);
                }
            }
        }
        return pair;
	}
}
//tc: O(n^2)


//this solution is incomplete
import java.util.*;
public class Solution {	

	public static int pairSum(int[] arr, int num) {
		//Your code goes here
        Arrays.sort(arr);
        int left =0, pair=0, right = arr.length-1;
        while(left < right){
            if(arr[left] + arr[right] == num){
                
                //count duplicates for left and right
                int leftCount = 0, rightCount = 0, duplicateCount = 0, count = 0, pairCount =0;
                for(int i=0; i<arr.length; i++){
                    if(arr[i] == arr[left]){
                        leftCount++;
                    }
                     if(arr[i] == arr[right]){
                        rightCount++;
                    }
                }
             
                duplicateCount = leftCount*rightCount;
                //increasing the pair
                if(arr[left] != arr[right]){
                    pair += duplicateCount;
                }else if(arr[left] == arr[right]){
                    for(int i=left+1; i<=right;i++){
                        if(arr[i] == arr[left]){
                            count++;
                        }
                    }
                    pairCount = count * (count - 1) / 2;
                     pair += pairCount;
                }else{
                    pair++;
                }
                // left++;
                right--;
            }else if(arr[left] + arr[right] < num){
                left++;
            }else if(arr[left] + arr[right] > num){
                right--;
            }
        }
        return pair;
	}
}
//tc: O(nlogn)