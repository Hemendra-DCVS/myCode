//temp array (consumes more space)

public class Solution {
    public static void rotate(int[] arr, int d) {
        int[] temp = new int[d];
        for(int i = 0; i<d; i++){
          temp[i] =  arr[i];
        }
       for(int i= 0; i<arr.length-d; i++){
            arr[i] = arr[i+d];
        }
        for(int i=arr.length-d, j=0; i<arr.length; i++, j++){
            arr[i] = temp[j];
        }
    }
}

// reversing array (no extra space)

public class Solution {
    public static void reversewhole(int[]arr){
        int left = 0;
        int right = arr.length-1; 
        while (left < right) {
            int temp = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;
            left++;
            right--;
        }
    }
    public static void reverselast(int[]arr, int d){
        int left = arr.length-d;
        int right = arr.length-1;
        while(left<right){
            int temp = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;
            left++;
            right--;
        }
    }

    public static void reversefirst(int[]arr, int d){
        int left = 0;
        int right = arr.length-d-1;
        while(left<right){
            int temp = arr[left];
            arr[left] = arr[right];
            arr[right] = temp;
            left++;
            right--;
        }
    }
    public static void rotate(int[] arr, int d) { 
        reversewhole(arr);
        reverselast(arr, d);
        reversefirst(arr,d);
    }
}