//graph HasPath? question
import java.util.*;
import java.util.Scanner;
public class graph4 {
    public static void pathBFS(int[][] AdjMatrix, int p1, int p2) {
        boolean visited[] = new boolean[AdjMatrix.length];
        Queue<Integer> pendingV = new LinkedList<>();
        pendingV.add(p1);
//1.add to queue
// 2.remove it and mark it visited and check if its destination
// 3.if its not do it process for its child
        while (pendingV.size() != 0) {
            int CV = pendingV.remove();
            visited[CV] = true;
            if (CV == p2) {
                System.out.print("true");
                return;
            }
            for (int i = 0; i < AdjMatrix.length; i++) {
                if (AdjMatrix[CV][i] == 1 && visited[i] == false) {
                    pendingV.add(i);
                    visited[i] = true;

                    /*
4 4
0 1
0 3
1 2
2 3
1 3
                       */
                }
            }
        }
        System.out.print("false");
        return;
    }

    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        int V = s.nextInt();
        int E = s.nextInt();
        int AdjMatrix[][] = new int[V][V];
        for (int i = 0; i < E; i++) {
            int e1 = s.nextInt();
            int e2 = s.nextInt();
            AdjMatrix[e1][e2] = 1;
            AdjMatrix[e2][e1] = 1;
        }
        int p1 = s.nextInt();
        int p2 = s.nextInt();
        pathBFS(AdjMatrix, p1, p2);
        /*boolean result = pathBFS(AdjMatrix, p1, p2);
        if (result) {
            System.out.println("true");
        } else {
            System.out.println("false");
        } */
    }
}
