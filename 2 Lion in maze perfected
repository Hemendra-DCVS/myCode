public class Solution {

    public static boolean ratInAMaze(int maze[][]) {
        int n = maze.length;
        int[][] path = new int[n][n];
        return solveMazeH(maze, 0, 0, path, n);
    }

    public static boolean solveMazeH(int maze[][], int i, int j, int path[][], int n) {
        if (i >= 0 && i < n && j >= 0 && j < n && path[i][j] == 0 && maze[i][j] == 1) {
            path[i][j] = 1;

            if (i == n - 1 && j == n - 1) {
                return true;
            }

            if (solveMazeH(maze, i, j + 1, path, n)) {
                return true;
            }
            if (solveMazeH(maze, i + 1, j, path, n)) {
                return true;
            }
            if (solveMazeH(maze, i - 1, j, path, n)) {
                return true;
            }
            if (solveMazeH(maze, i, j - 1, path, n)) {
                return true;
            }

            path[i][j] = 0; // Backtrack if no path found from this cell
        }

        return false;
    }
}
