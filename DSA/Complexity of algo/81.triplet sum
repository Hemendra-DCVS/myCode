public class Solution {	

	public static int tripletSum(int[] arr, int num) {
		//Your code goes here
		int pair =0;
		for(int i=0; i<arr.length; i++){
			for(int j=i+1; j<arr.length; j++){
				for(int k=j+1; k<arr.length;k++){
					if(arr[i] + arr[j] + arr[k] == num){
						pair++;
					}
				}
			}
		}
		return pair;
	}
}
//tc: O(n^3)

import java.util.*;
public class Solution {	
	public static int tripletSum(int[] arr, int num) {
		//Your code goes here
		Arrays.sort(arr);  
        int pair = 0;
        for (int i = 0; i < arr.length - 2; i++) {
            int j = i + 1; 
            int k = arr.length - 1;
            while (j < k) { 
                int sum = arr[i] + arr[j] + arr[k];
                if (sum == num) {
                    pair++;
                    // while (j < k && arr[j] == arr[j - 1]) {
                    //     j++;
					// 	pair++;
                    // }
                    while (j < k && arr[k] == arr[k - 1]) {
						pair++;
                        k--;
                    }
					j++;
                } else if (sum < num) {
                    j++; 
                } else {
                    k--; 
                }
            }
        }
        return pair;
	}
}
//tc: O(n^2)